using System;
using System.Text;
using System.Windows.Forms;
using Eplan.EplApi.ApplicationFramework;
using Eplan.EplApi.Scripting;

public class Class
{
    [Start]
    public void Function()
    {
        string[] pages = GetPages();
        ProcessAllPages(pages);
    }

    private static string[] GetPages()
    {
        ActionCallingContext acc = new ActionCallingContext();
        string pagesString = string.Empty;
        acc.AddParameter("TYPE", "PAGES");
        new CommandLineInterpreter().Execute("selectionset", acc);
        acc.GetParameter("PAGES", ref pagesString);
        return pagesString.Split(new char[] { ';' }, StringSplitOptions.RemoveEmptyEntries);
    }

    private void ProcessAllPages(string[] pages)
    {
        if (pages.Length == 0)
        {
            MessageBox.Show("Pages not found.", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            return;
        }

        StringBuilder resultBuilder = new StringBuilder();
        resultBuilder.AppendLine("Property value of 11006:");

        foreach (string page in pages)
        {
            string pageProperty = GetPageProperty(page);
            resultBuilder.AppendLine("Page " + page + ": " + pageProperty);
        }

        MessageBox.Show(resultBuilder.ToString(), "Properties of pages", MessageBoxButtons.OK, MessageBoxIcon.Information);
    }

    private string GetPageProperty(string page)
    {
        ActionCallingContext acc = new ActionCallingContext();
        acc.AddParameter("PageName", page);
        acc.AddParameter("PropertyId", "11006");
        new CommandLineInterpreter().Execute("XEsGetPagePropertyAction", acc);
        string propertyValue = "";
        acc.GetParameter("PropertyValue", ref propertyValue);
        return propertyValue;
    }
}
